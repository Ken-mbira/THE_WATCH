# Generated by Django 3.2.8 on 2021-11-02 13:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required', max_length=50, verbose_name='event name')),
                ('description', models.TextField(help_text='format: required', verbose_name='event description')),
            ],
            options={
                'verbose_name': 'Event type',
                'verbose_name_plural': 'Event types',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format:required, max_length=100', max_length=100, unique=True, verbose_name='Location')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text='Format: not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='neighbourhood.location', verbose_name='parent of location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Neighbourhood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required', max_length=50, verbose_name='neighbourhood name')),
                ('slogan', models.CharField(help_text='format: required, max_length=50', max_length=50, verbose_name='slogan')),
                ('police_hotline', models.CharField(help_text='format: required', max_length=10, verbose_name='police hotline')),
                ('hospital_hotline', models.CharField(help_text='format: required', max_length=10, verbose_name='hospital hotline')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(null=True, upload_to='images/')),
                ('admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='is_admin_in', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='neighbourhood', to='neighbourhood.location')),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required', max_length=50, verbose_name='service name')),
                ('description', models.TextField(help_text='format: required', verbose_name='service description')),
            ],
            options={
                'verbose_name': 'Service type',
                'verbose_name_plural': 'Service types',
            },
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required', max_length=50, verbose_name='ocurrence name')),
                ('description', models.TextField(help_text='format: required', verbose_name='occurence description')),
                ('image_description', models.ImageField(upload_to='images/')),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('to_happen_at', models.DateTimeField(blank=True, null=True, verbose_name='scheduled time')),
                ('neighbourhood', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_events', to='neighbourhood.neighbourhood')),
                ('reporter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_events', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='occurred_events', to='neighbourhood.eventtype')),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='format: required', max_length=50, verbose_name='business name')),
                ('image', models.ImageField(upload_to='images/')),
                ('owner', models.ForeignKey(help_text='owner of business', on_delete=django.db.models.deletion.CASCADE, related_name='business', to=settings.AUTH_USER_MODEL, verbose_name='owner of business')),
                ('services', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business', to='neighbourhood.services', verbose_name='services offered')),
            ],
        ),
    ]
